version: '3.8'

services:
  1.game-shop.client.multi:
    image: lr-game-shop-client:0.0.1
    container_name: 1.game-shop.client.multi
    ports:
      - "8080:8080"
    environment:
      - CASSANDRA_NODE_ADDRESSES=1.game-shop.cassandra.multi,2.game-shop.cassandra.multi,3.game-shop.cassandra.multi
      - CASSANDRA_NODE_PORT=9042
      - MONGO_URI=mongodb://1.game-shop.mongo.multi:30001,2.game-shop.mongo.multi:30001,3.game-shop.mongo.multi:30001/
    depends_on:
      1.game-shop.cassandra.multi:
        condition: service_healthy
      1.game-shop.mongo.multi:
        condition: service_healthy
    networks:
      - game-shop-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  1.game-shop.cassandra.multi:
    image: cassandra:5.0
    container_name: 1.game-shop.cassandra.multi
    volumes:
      - ./data/cassandra-1:/data/db,size=8G
    environment:
      - MAX_HEAP_SIZE=1512M
      - HEAP_NEWSIZE=128M
      - CASSANDRA_SEEDS=1.game-shop.cassandra.multi,2.game-shop.cassandra.multi,3.game-shop.cassandra.multi
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - game-shop-network

  2.game-shop.cassandra.multi:
    image: cassandra:5.0
    container_name: 2.game-shop.cassandra.multi
    volumes:
      - ./data/cassandra-2:/data/db,size=8G
    environment:
      - MAX_HEAP_SIZE=1512M
      - HEAP_NEWSIZE=128M
      - CASSANDRA_SEEDS=1.game-shop.cassandra.multi,2.game-shop.cassandra.multi,3.game-shop.cassandra.multi
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - game-shop-network

  3.game-shop.cassandra.multi:
    image: cassandra:5.0
    container_name: 3.game-shop.cassandra.multi
    volumes:
      - ./data/cassandra-3:/data/db,size=8G
    environment:
      - MAX_HEAP_SIZE=1512M
      - HEAP_NEWSIZE=128M
      - CASSANDRA_SEEDS=1.game-shop.cassandra.multi,2.game-shop.cassandra.multi,3.game-shop.cassandra.multi
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - game-shop-network

  1.game-shop.mongo.multi:
    image: mongo:5
    container_name: 1.game-shop.mongo.multi
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
    volumes:
      - ./data/mongo-1:/data/db,size=8G
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"1.game-shop.mongo.multi:30001\"},{_id:1,host:\"2.game-shop.mongo.multi:30001\"},{_id:2,host:\"3.game-shop.mongo.multi:30001\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.25'
    networks:
      - game-shop-network

  2.game-shop.mongo.multi:
    image: mongo:5
    container_name: 2.game-shop.mongo.multi
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001" ]
    volumes:
      - ./data/mongo-2:/data/db,size=8G
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.25'
    networks:
      - game-shop-network

  3.game-shop.mongo.multi:
    image: mongo:5
    container_name: 3.game-shop.mongo.multi
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001" ]
    volumes:
      - ./data/mongo-3:/data/db,size=8G
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.25'
    networks:
      - game-shop-network

networks:
  game-shop-network:
    driver: bridge